datasources:
  datasources.yaml:    
    apiVersion: 1
    deleteDatasources:
    - name: Prometheus
      orgId: 1   
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-kube-prometheus-prometheus:9090
      orgId: 1
      access: proxy
      isDefault: true 


          

grafana:
  enabled: true
  defaultDashboardsEnabled: true
  adminPassword: passwd
  namespaceOverride: ""
  # set pspUseAppArmor to false to fix Grafana pod Init errors
  rbac:
    pspUseAppArmor: false

#Persistence:
#  type: pvc
#  enabled: true
#  storageClassName: gp2
#  accessModes:
#    - ReadWriteOnce 
#  finalizers:
#    - kubernetes.io/pvc-protection
#  existingClaim: grafana-volume
#selectorLabels: {}
#subPath: ""    

#extraVolumeMounts: 
#    - name: grafana-volume
#      mountPath: /var/lib/grafana/dashboards
#      readOnly: false


ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"

  path: /grafana/?(.*)
  hosts:
    - wizardneon.link

grafana.ini:
  server:
    root_url: http://localhost:80/grafana # this host can be localhost
 

serverDashboardConfigmaps:
    - custom-dashboards    
serverDashboardFiles: {}    

providers:
  - name: 'custom'
    orgId: 1
    folder: ''
    folderUid: ''
    type: file
    disableDeletion: false
    updateIntervalSeconds: 10
    allowUiUpdates: true
    options:
      path: /var/lib/grafana/
      foldersFromFilesStructure: true
